/*
 * Peri_Uart.c
 *
 *  Created on: Jun 11, 2022
 *      Author: kangi
 */


#include "Peri_Uart.h"

void Peri_Uart_Init(void)
{
	MX_USART1_UART_Init();
}

void Peri_Uart_Trasmit(uint8_t mod,UART_HandleTypeDef* uartHandle, uint8_t *data, uint8_t size)
{
	switch(mod)
	{
	case PERI_UART_TRANS_NORMAL:
		HAL_UART_Transmit(uartHandle, data, size, 100);
		break;

	case PERI_UART_TRANS_INT:
		HAL_UART_Transmit_IT(uartHandle, data, size);
		break;

	case PERI_UART_TRANS_DMA:
		HAL_UART_Transmit_DMA(uartHandle, data, size);
		break;
	}
}

void Peri_Uart_Receive(uint8_t mod,UART_HandleTypeDef* uartHandle, uint8_t *data, uint8_t size)
{
	switch(mod)
	{
	case PERI_UART_RCV_NORMAL:
		HAL_UART_Receive(uartHandle, data, size, 100);
		break;

	case PERI_UART_RCV_INT:
		HAL_UART_Receive_IT(uartHandle, data, size);
		break;

	case PERI_UART_RCV_DMA:
		HAL_UART_Receive_DMA(uartHandle, data, size);
		break;
	}
}

void Peri_Uart_DMA_Control(uint8_t mod, UART_HandleTypeDef* uartHandle)
{
	switch(mod)
	{
	case PERI_UART_DMA_PAUSE:

		break;

	case PERI_UART_DMA_RESUME:

		break;

	case PERI_UART_DMA_STOP:

		break;
	}
}

HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart);
/* Transfer Abort functions */
HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart);
HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart);

void HAL_UART_IRQHandler(UART_HandleTypeDef *huart);
void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart);
void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart);
void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart);

